{"version":3,"sources":["components/map/index.js","components/csvUploader/index.js","components/charts/bar.js","components/charts/pie.js","scripts/constant.js","scripts/chartData.js","components/charts/index.js","scripts/csvTojson.js","scripts/filterables.js","store/reducers.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","progressLoader","bind","assertThisInitialized","tiles","window","L","tileLayer","maxZoom","attribution","latlng","latLng","map","center","zoom","layers","scrollWheelZoom","markers","markerClusterGroup","chunkedLoading","chunkProgress","nextProps","_this2","state","markerArray","filterArray","json","allIds","currentFilter","filtered","type","id","clearLayers","_nextProps$state$json","data","from_lat","user_id","from_long","to_lat","to_long","from_date","vehicle_model_id","marker","push","destinationIcon","icon","iconUrl","iconSize","iconAnchor","shadowAnchor","popupAnchor","popup","addLayers","addLayer","on","event","_event$layer$options","layer","options","to_date","destinationMarker","removeLayer","addTo","newgroup","featureGroup","target","fitBounds","getBounds","setLatLng","setContent","concat","openOn","group","processed","total","elapsed","layersArray","console","log","Math","round","react_default","a","createElement","React","Component","connect","Uploader","onChangeHandler","file","files","reader","FileReader","self","onload","fileData","result","getData","readAsText","style","float","display","paddingTop","className","margin","onClick","resetFilters","accept","multiple","onChange","dispatch","payload","BarChart","_this$props","_this$props$params","params","categories","callback","Highcharts","chart","title","text","xAxis","yAxis","min","stackLabels","enabled","fontWeight","color","theme","textColor","tooltip","headerFormat","pointFormat","plotOptions","column","stacking","dataLabels","dataLabelsColor","point","events","click","credits","series","width","height","PieChart","plotBackgroundColor","plotBorderWidth","plotShadow","pie","allowPointSelect","cursor","showInLegend","PackageName","1","2","3","4","5","6","7","other","TravelName","OnlineBookingName","0","packageVsCancellation","packages","cancelledPackage","name","keys","key","y","length","index","packagePerTravelType","travelPerPackage","renderArray","travel","pack","NumberOfBookingsChart","onlineBookings","travelTypes","textAlign","package_id","colorByPoint","travel_type_id","online_booking","bar","cancelledPackageBookings","newLine","hasContent","values","i","trimPropertyName","value","replace","getValueFormatByType","isNaN","Number","String","buildJsonResult","headers","currentLine","jsonObject","j","propertyName","XRideFilterables","constructData","csv","generalisedData","parsedCsv","filterables","lines","split","jsonResult","filteredResult","forEach","element","getJsonWithFilterables","filter","Car_Cancellation","indexOf","travelKey","xRider","arguments","undefined","action","objectSpread","store","createStore","reducers","App","es","csvUploader","components_map","charts","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.582561a0.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './map.css';\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.progressLoader = this.progressLoader.bind(this);\n  }\n  \n  componentDidMount() {\n    var tiles = window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 20,\n      attribution: 'OpenStreetMap'\n    }),\n    latlng = window.L.latLng(12.92415,77.67229);\n    this.map = window.L.map('map', { center: latlng, zoom: 13, layers: [tiles], scrollWheelZoom: false });\n    this.markers = window.L.markerClusterGroup({ chunkedLoading: true, chunkProgress: this.progressLoader });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if(nextProps.state) {\n      let markerArray = [];\n      let filterArray = nextProps.state.json.allIds;\n      if (nextProps.state.currentFilter) {\n        filterArray = nextProps.state.filtered[nextProps.state.currentFilter.type][nextProps.state.currentFilter.id];\n      }\n      this.markers.clearLayers();\n      filterArray.map((id) => {\n        const { from_lat, user_id, from_long, to_lat, to_long, from_date, vehicle_model_id } = nextProps.state.json.data[id];\n        if(from_lat && from_long ) {\n          let marker = new window.L.marker([from_lat, from_long], { id, user_id, to_lat, to_long, from_date, vehicle_model_id });\n          markerArray.push(marker);\n        }\n      });\n      var destinationIcon = window.L.icon({\n        iconUrl: 'https://png.pngtree.com/svg/20170502/91a8305b9c.png',\n        iconSize:     [45, 45], // size of the icon\n        iconAnchor:   [22, 64], // point of the icon which will correspond to marker's location\n        shadowAnchor: [4, 22],  // the same for the shadow\n        popupAnchor:  [-3, -36] // point from which the popup should open relative to the iconAnchor\n    });\n      var popup = window.L.popup();\n      // Add info to tip\n      this.markers.addLayers(markerArray);\n      this.map.addLayer(this.markers);\n      this.markers.on('click', (event) => {\n        const { user_id, to_lat, to_long, from_date, to_date, id } = event.layer.options;\n        if(this.destinationMarker) {\n          this.map.removeLayer(this.destinationMarker);\n        }\n        if(to_lat && to_long) {\n          this.destinationMarker = new window.L.marker([to_lat, to_long], {icon: destinationIcon}).addTo(this.map);;\n        }\n        var newgroup = new window.L.featureGroup([this.destinationMarker, event.target]);\n        this.map.fitBounds(newgroup.getBounds());\n        popup\n          .setLatLng(event.latlng)\n          .setContent(`Booking Id : ${id} <br> Start Time : ${from_date} <br> End Time : ${to_date || 'Unknown'} <br> User Id: ${user_id} ${!to_lat || !to_long ? '<br> Destination: Unknown' : ''}`)\n          .openOn(this.map);\n      });\n      this.map.on('click', () => {\n        if (this.destinationMarker) {\n          this.map.removeLayer(this.destinationMarker);\n        }\n      });\n      var group = new window.L.featureGroup(markerArray);\n      this.map.fitBounds(group.getBounds());\n    }\n    return false;\n  }\n\n  progressLoader(processed, total, elapsed, layersArray) {\n    if (elapsed > 1000) {\n      console.log(' ==================== loading : ', Math.round(processed/total*100) + '%');\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"map\" />\n    );\n  }\n};\n\nconst mapStateToProps = state => ({\n  state: state,\n});\n\nexport default connect(mapStateToProps)(Map);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass Uploader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n  }\n  \n  onChangeHandler(event) {\n    const file = event.target.files[0];\n    // This can be added in middleware\n    var reader = new FileReader();\n    const self = this;\n    reader.onload = function(event) {\n      const fileData = event.target.result;\n      self.props.getData(fileData);\n    };\n    reader.readAsText(file);\n  }\n  \n  render () {\n    return (\n      <div style={{float: 'right', display: 'inline-block', paddingTop: '30px' }}>\n        { this.props.state && this.props.state.currentFilter && (\n          <button\n            className=\"btn btn-default\"\n            style={{ margin: '10px 10px 10px 0' }}\n            onClick={this.props.resetFilters}>Reset Filters</button>\n        )}\n        { !this.props.state && (\n          <input\n            id=\"selectFileButton\"\n            type=\"file\"\n            accept=\".csv, text/csv\"\n            multiple=\"\"\n            onChange={this.onChangeHandler}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state: state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getData: (file) => {\n    dispatch({ type: 'STORE_DATA', payload: file })\n  },\n  resetFilters: () => {\n    dispatch({ type: 'RESET_FILTER' })\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Uploader);","import React from 'react';\n\nclass BarChart extends React.Component {\n  componentDidMount() {\n    const { params: { id, data, categories }, callback } = this.props;\n    window.Highcharts.chart(id, {\n      chart: {\n          type: 'column'\n      },\n      title: {\n        text: ''\n      },\n      xAxis: {\n        categories: categories,\n      },\n      yAxis: {\n          min: 0,\n          title: {\n            text: 'Percent'\n          },\n          stackLabels: {\n              enabled: true,\n              style: {\n                  fontWeight: 'bold',\n                  color: (window.Highcharts.theme && window.Highcharts.theme.textColor) || 'gray'\n              }\n          }\n      },\n      tooltip: {\n        headerFormat: '<b>{point.x}</b><br/>',\n        pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\n      },\n      plotOptions: {\n          column: {\n            stacking: 'percent',\n            dataLabels: {\n              enabled: true,\n              color: (window.Highcharts.theme && window.Highcharts.theme.dataLabelsColor) || 'white'\n            },\n            point: {\n              events: {\n                  click: function () {\n                    callback(this.id);\n                  }\n              }\n            }\n          }\n      },\n      credits: {\n        enabled: false\n      },\n      series: data\n    });\n  }\n\n  render() {\n    return (\n      <div id={this.props.params.id} style={{ width: 500, height: 300 }}></div>\n    );\n  }\n}\n\nexport default BarChart;","import React from 'react';\n\nclass PieChart extends React.Component {\n  componentDidMount() {\n    const { params: { title, id, data }, callback } = this.props;\n    // Create the chart\n    window.Highcharts.chart(id, {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n      },\n      title: {\n        text: title,\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: false\n          },\n          showInLegend: true,\n          point: {\n            events: {\n                click: function () {\n                  callback(this.id);\n                }\n            }\n          }\n        }\n      },\n      credits: {\n        enabled: false\n      },\n      series: data,\n    });\n  }\n\n  render() {\n    return (\n      <div id={this.props.params.id} style={{ width: 450, height: 200 }}></div>\n    );\n  }\n}\n\nexport default PieChart;","export const PackageName = {\n  1: 'Package 1',\n  2: 'Package 2',\n  3: 'Package 3',\n  4: 'Package 4',\n  5: 'Package 5',\n  6: 'Package 6',\n  7: 'Package 7',\n  other: 'Other',\n}\n\nexport const TravelName = {\n  1: 'Long distance',\n  2: 'Point to Point',\n  3: 'Hourly rental',\n}\n\nexport const OnlineBookingName = {\n  0: 'Others',\n  1: 'Desktop',\n}\n","import { PackageName, TravelName, OnlineBookingName } from '../scripts/constant';\n\nconst travelType = (travelTypes) => {\n  const title = '';\n  const id = 'travelChart';\n  const dataArray = Object.keys(travelTypes).map((id) => ({\n    name: TravelName[id],\n    y: travelTypes[id] ? travelTypes[id].length : 0,\n    id,\n  }));\n  const data = [{\n    name: 'Travel',\n    colorByPoint: true,\n    data: dataArray\n  }];\n  \n  return {\n    id,\n    data,\n    title,\n  }\n};\n\nconst packageType = (packages) => {\n  const title = '';\n  const id = 'packagePie';\n  const dataArray = Object.keys(packages).map((id) => ({\n    name: PackageName[id],\n    y: packages[id] ? packages[id].length : 0,\n    id,\n  }));\n  const data = [{\n    name: 'Packages',\n    colorByPoint: true,\n    data: dataArray,\n  }];\n  \n  return {\n    id,\n    data,\n    title,\n  }\n}\n\nconst packageVsCancellation = (packages, cancelledPackage) => {\n  // If a package is not used in any booking, it will not be shown in graph\n  const bookings = Object.keys(packages).map((key) => {\n    return {\n      y: packages[key].length - cancelledPackage[key].length,\n      id: key,\n    };\n  });\n  const cancelledBooking = Object.keys(cancelledPackage).map((key) => {\n    return {\n      y: cancelledPackage[key].length,\n      id: key,\n    }\n  });\n  const title = 'Packages';\n  const categories = ['Package 1', 'Package 2', 'Package 3', 'Package 4', 'Package 5', 'Package 6', 'Package 7', 'Others'];\n  const id = 'Packages';\n  const data = [{\n    name: 'Successfull Booking',\n    data: bookings,\n    index:1,\n    id: 'package_id',\n  }, {\n    name: 'Cancelled',\n    data: cancelledBooking,\n    color: 'red',\n    index: 0,\n    id: 'cancelledPackageBookings',\n  }];\n  return {\n    id,\n    data,\n    title,\n    categories,\n  }\n}\n\nconst packagePerTravelType = (travelPerPackage) => {\n  const renderArray = {};\n  Object.keys(travelPerPackage).map((travel) => {\n    renderArray[travel] = [];\n    Object.keys(travelPerPackage[travel]).map((pack) => {\n      renderArray[travel].push(travelPerPackage[travel][pack].length)\n    });\n  });\n  const categories = ['Package 1', 'Package 2', 'Package 3', 'Package 4', 'Package 5', 'Package 6', 'Package 7', 'Others'];\n  const id = 'travelPacks';\n  const data = [{\n    name: 'Long Distance',\n    data: renderArray[1],\n  }, {\n    name: 'Point to Point',\n    data: renderArray[2],\n  }, {\n    name: 'Hourly Rental',\n    data: renderArray[3],\n  }];\n  return {\n    id,\n    data,\n    title: '',\n    categories,\n  }\n}\n\nconst onlineBooking = (onlineBookings) => {\n  const title = '';\n  const id = 'onlineBooking';\n  const dataArray = Object.keys(onlineBookings).map((id) => ({\n    name: OnlineBookingName[id],\n    y: onlineBookings[id] ? onlineBookings[id].length : 0,\n    id,\n  }));\n  const data = [{\n    name: 'Online booking',\n    colorByPoint: true,\n    data: dataArray,\n  }];\n  \n  return {\n    id,\n    data,\n    title,\n  }\n}\n\nexport {\n  travelType,\n  packageType,\n  packageVsCancellation,\n  packagePerTravelType,\n  onlineBooking,\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport BarChart from './bar';\nimport PieChart from './pie';\nimport {\n  travelType,\n  packageType,\n  packageVsCancellation,\n  packagePerTravelType,\n  onlineBooking,\n} from '../../scripts/chartData';\n\nclass NumberOfBookingsChart extends React.Component {\n  render () {\n    const { data, getData } = this.props;\n    if (data) {\n      return (\n        <div style={{ display: 'inline-block' }} >\n          <div style={{display: 'inline-block'}}>\n            <h3 style={{ textAlign: 'center' }}>Package bookings</h3>\n            <PieChart callback={(id) => getData({ type: 'package_id', id}) } params={packageType(data.package_id)} />\n          </div>\n          <div style={{display: 'inline-block'}}>\n            <h3 style={{ textAlign: 'center' }}>Bookings for different travel types</h3>\n            <PieChart callback={(id) => getData({ type: 'travel_type_id', id}) } params={travelType(data.travel_type_id)} />\n          </div>\n          <div style={{display: 'inline-block'}}>\n            <h3 style={{ textAlign: 'center' }}>Online Booking</h3>\n            <PieChart callback={(id) => getData({ type: 'online_booking', id}) } params={onlineBooking(data.online_booking)} />\n          </div>\n          <div style={{display: 'inline-block'}}>\n            <h3 style={{ textAlign: 'center' }}>Cancellation per package</h3>\n            <BarChart callback={(id) => console.log(id) } params={packageVsCancellation(data.package_id, data.cancelledPackageBookings)} />\n          </div>\n          <div style={{display: 'inline-block'}}>\n            <h3 style={{ textAlign: 'center' }}>Travel type in each package</h3>\n            <BarChart callback={(id) => console.log(id) } params={packagePerTravelType(data.travelPerPackage)} />\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state ? state.filtered : null,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getData: (payload) => {\n    dispatch({ type: 'FILTER_POINT', payload })\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NumberOfBookingsChart);","const newLine = /\\r?\\n/;\nconst defaultFieldDelimiter = ';';\nconst delimiter = ',';\n\nconst validateJson = (json) => {\n  try {\n    JSON.parse(json);\n  } catch (err) {\n    throw Error('Parsed csv has generated an invalid json!!!\\n' + err);\n  }\n}\n\nconst hasContent = (values) => {\n  if (values.length > 0) {\n    for (let i = 0; i < values.length; i++) {\n      if (values[i]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nconst trimPropertyName = (value) => {\n  return value.replace(/\\s/g, '');\n}\n\nconst getValueFormatByType = (value) => {\n  let isNumber = !isNaN(value);\n  if (isNumber) {\n      return Number(value);\n  }\n  if (value === \"NULL\") {\n    return null;\n  }\n  return String(value);\n}\n\nconst buildJsonResult = (headers, currentLine) => {\n  let jsonObject = {};\n  for (let j = 0; j < headers.length; j++) {\n    let propertyName = trimPropertyName(headers[j]);\n\n    let value = currentLine[j];\n    value = getValueFormatByType(currentLine[j]);\n    jsonObject[propertyName] = value;\n  }\n  return jsonObject;\n}\n\nconst getFieldDelimiter = () => {\n  if (delimiter) {\n    return delimiter;\n  }\n  return defaultFieldDelimiter;\n}\n\n\nconst csvToJson = (parsedCsv, filterables) => {\n  let lines = parsedCsv.split(newLine);\n  let fieldDelimiter = getFieldDelimiter();\n  let headers = lines[0].split(fieldDelimiter);\n\n  let jsonResult = [];\n  let jsonData = {};\n  let filteredResult = {};\n\n  filterables.forEach(element => {\n    filteredResult[element] = {};\n  });\n\n  for (let i = 1; i < lines.length; i++) {\n    let currentLine = lines[i].split(fieldDelimiter);\n    if (hasContent(currentLine)) {\n      jsonData = buildJsonResult(headers, currentLine); \n      jsonResult.push(jsonData);\n\n    }\n  }\n  return jsonResult;\n}\n\nconst getJsonFromCsvStringified = (parsedCsv) => {\n  let json = csvToJson(parsedCsv)\n  let jsonStringified = JSON.stringify(json, undefined, 1);\n  validateJson(jsonStringified);\n  return jsonStringified;\n}\n\nconst getJsonWithFilterables = (parsedCsv, filterables) => {\n  let lines = parsedCsv.split(newLine);\n  let fieldDelimiter = getFieldDelimiter();\n  let headers = lines[0].split(fieldDelimiter);\n\n  let jsonResult = {\n    data: {},\n    allIds: [],\n    length: 0,\n  };\n  let jsonObject = {};\n  let filteredResult = {};\n\n  filterables.forEach(element => {\n    filteredResult[element] = {};\n  });\n\n  for (let i = 1; i < lines.length; i++) {\n    let currentLine = lines[i].split(fieldDelimiter);\n    if (hasContent(currentLine)) {\n      jsonObject = buildJsonResult(headers, currentLine); \n      jsonResult.data[jsonObject.id] = jsonObject;\n      jsonResult.allIds.push(jsonObject.id);\n      jsonResult.length += 1;\n      filterables.forEach(element => {\n        const key = jsonObject[element] === null ? 'others' : jsonObject[element];\n        filteredResult[element][key] = filteredResult[element][key] || [];\n        filteredResult[element][key].push(jsonObject['id']);\n      });\n    }\n  }\n  return {'json':jsonResult, 'filtered':filteredResult};\n}\n\nexport {getJsonFromCsvStringified, getJsonWithFilterables};","// Tell what are filterable data\n// On what basis it has to be filetered in diff categories\n\nconst XRideFilterables = [\n  'user_id',\n  'package_id',\n  'vehicle_model_id',\n  'travel_type_id',\n  'from_area_id',\n  'to_area_id',\n  'from_city_id',\n  'to_city_id',\n  'online_booking',\n  'mobile_site_booking',\n  'Car_Cancellation'\n];\n\nconst checkEmptyData = [\n  'id',\n  'user_id',\n  'vehicle_model_id',\n  'package_id',\n  'travel_type_id',\n  'from_area_id',\n  'to_area_id',\n  'from_city_id',\n  'to_city_id',\n  'from_date',\n  'to_date',\n  'online_booking',\n  'mobile_site_booking',\n  'booking_created',\n  'from_lat',\n  'from_long',\n  'to_lat',\n  'to_long',\n  'Car_Cancellation',\n];\n\nexport default XRideFilterables;","import { getJsonWithFilterables } from '../scripts/csvTojson';\nimport XRideFilterables from '../scripts/filterables';\n\nconst defaultState = null;\n\nconst constructData = (csv) => {\n  const generalisedData = getJsonWithFilterables(csv, XRideFilterables);\n  // Add additional filters\n  const cancelledPackageBookings = {};\n  const travelPerPackage = {};\n  Object.keys(generalisedData.filtered.package_id).map((key) => {\n    const pack = generalisedData.filtered.package_id[key]; // Array of Ids\n    cancelledPackageBookings[key] = pack.filter(value => -1 !== generalisedData.filtered.Car_Cancellation[1].indexOf(value));\n    Object.keys(generalisedData.filtered.travel_type_id).map((travelKey) => {\n      if(!travelPerPackage[travelKey]) {\n        travelPerPackage[travelKey] = {};\n      }\n      travelPerPackage[travelKey][key] = pack.filter(value => -1 !== generalisedData.filtered.travel_type_id[travelKey].indexOf(value));\n    })\n  });\n  generalisedData.filtered.travelPerPackage = travelPerPackage;\n  generalisedData.filtered.cancelledPackageBookings = cancelledPackageBookings;\n  console.log('generalisedData', generalisedData);\n  return generalisedData;\n}\n\nconst xRider = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'STORE_DATA':\n      return constructData(action.payload);\n    case 'FILTER_POINT':\n      return {\n        ...state,\n        currentFilter: {\n          type: action.payload.type,\n          id: action.payload.id,\n        }\n      };\n    case 'RESET_FILTER':\n      return {\n        ...state,\n        currentFilter: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default xRider;\n","import { createStore } from 'redux';\nimport reducers from './reducers';\n\nconst store = createStore(reducers);\n\nexport { store };\n","import React from 'react';\nimport Map from './components/map';\nimport { Provider } from 'react-redux';\nimport Uploader from './components/csvUploader';\nimport NumberOfBookingsChart from './components/charts';\nimport { store } from './store';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <div style={{ display: 'inline-block', width: '100%' }}>\n            <h1 style={{ display: 'inline-block' }}>Interactive Map demo</h1>\n            <Uploader />\n          </div>\n          <Map />\n          <NumberOfBookingsChart />\n        </div>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}