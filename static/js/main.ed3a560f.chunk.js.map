{"version":3,"sources":["components/map/index.js","components/csvUploader/index.js","components/charts/pie.js","components/charts/index.js","scripts/chartData.js","scripts/csvTojson.js","scripts/filterables.js","store/reducers.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","progressLoader","bind","assertThisInitialized","tiles","window","L","tileLayer","maxZoom","attribution","latlng","latLng","map","center","zoom","layers","markers","markerClusterGroup","chunkedLoading","chunkProgress","nextProps","state","markerArray","filterArray","json","allIds","currentFilter","filtered","type","id","clearLayers","_nextProps$state$json","data","from_lat","from_long","marker","push","addLayers","addLayer","group","featureGroup","fitBounds","getBounds","processed","total","elapsed","layersArray","console","log","Math","round","react_default","a","createElement","React","Component","connect","Uploader","onChangeHandler","event","file","target","files","reader","FileReader","self","onload","fileData","result","getData","readAsText","style","float","display","paddingTop","className","margin","onClick","resetFilters","accept","multiple","onChange","dispatch","payload","PieChart","_this$props","_this$props$params","params","title","callback","Highcharts","chart","plotBackgroundColor","plotBorderWidth","plotShadow","text","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","showInLegend","point","events","click","credits","series","width","height","NumberOfBookingsChart","travelTypes","packages","textAlign","package_id","name","colorByPoint","y","length","travel_type_id","newLine","hasContent","values","i","trimPropertyName","value","replace","getValueFormatByType","isNaN","Number","String","buildJsonResult","headers","currentLine","jsonObject","j","propertyName","XRideFilterables","constructData","csv","generalisedData","parsedCsv","filterables","lines","split","jsonResult","filteredResult","forEach","element","key","getJsonWithFilterables","cancelledPackageBookings","keys","pack","filter","Car_Cancellation","indexOf","xRider","arguments","undefined","action","objectSpread","store","createStore","reducers","App","es","marginLeft","csvUploader","components_map","charts","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4QAIMA,qBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,eAAiBP,EAAKO,eAAeC,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IAFLA,mFAMjB,IAAIU,EAAQC,OAAOC,EAAEC,UAAU,qDAAsD,CACnFC,QAAS,GACTC,YAAa,oHAEfC,EAASL,OAAOC,EAAEK,OAAO,SAAS,UACpCd,KAAKe,IAAMP,OAAOC,EAAEM,IAAI,MAAO,CAAEC,OAAQH,EAAQI,KAAM,GAAIC,OAAQ,CAACX,KAClEP,KAAKmB,QAAUX,OAAOC,EAAEW,mBAAmB,CAAEC,gBAAgB,EAAMC,cAAetB,KAAKI,+DAGnEmB,GACpB,GAAGA,EAAUC,MAAO,CAClB,IAAIC,EAAc,GACdC,EAAcH,EAAUC,MAAMG,KAAKC,OACnCL,EAAUC,MAAMK,gBAClBH,EAAcH,EAAUC,MAAMM,SAASP,EAAUC,MAAMK,cAAcE,MAAMR,EAAUC,MAAMK,cAAcG,KAE3GhC,KAAKmB,QAAQc,cACbP,EAAYX,IAAI,SAACiB,GAAO,IAAAE,EACUX,EAAUC,MAAMG,KAAKQ,KAAKH,GAAlDI,EADcF,EACdE,SAAUC,EADIH,EACJG,UAClB,GAAGD,GAAYC,EAAY,CACzB,IAAIC,EAAS,IAAI9B,OAAOC,EAAE6B,OAAO,CAACF,EAAUC,IAC5CZ,EAAYc,KAAKD,MAIrBtC,KAAKmB,QAAQqB,UAAUf,GACvBzB,KAAKe,IAAI0B,SAASzC,KAAKmB,SACvB,IAAIuB,EAAQ,IAAIlC,OAAOC,EAAEkC,aAAalB,GACtCzB,KAAKe,IAAI6B,UAAUF,EAAMG,aAE3B,OAAO,yCAGMC,EAAWC,EAAOC,EAASC,GACpCD,EAAU,KACZE,QAAQC,IAAI,mCAAoCC,KAAKC,MAAMP,EAAUC,EAAM,KAAO,sCAKpF,OACEO,EAAAC,EAAAC,cAAA,OAAKxB,GAAG,eAhDIyB,IAAMC,YAyDTC,cAJS,SAAAnC,GAAK,MAAK,CAChCA,MAAOA,IAGMmC,CAAyBhE,GC1DlCiE,cACJ,SAAAA,EAAYhE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4D,IACjB/D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8D,GAAAzD,KAAAH,KAAMJ,KACDiE,gBAAkBhE,EAAKgE,gBAAgBxD,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IAFNA,+EAKHiE,GACd,IAAMC,EAAOD,EAAME,OAAOC,MAAM,GAE5BC,EAAS,IAAIC,WACXC,EAAOpE,KACbkE,EAAOG,OAAS,SAASP,GACvB,IAAMQ,EAAWR,EAAME,OAAOO,OAC9BH,EAAKxE,MAAM4E,QAAQF,IAErBJ,EAAOO,WAAWV,oCAIlB,OACET,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAACC,MAAO,QAASC,QAAS,eAAgBC,WAAY,SAC9D7E,KAAKJ,MAAM4B,OAASxB,KAAKJ,MAAM4B,MAAMK,eACrCyB,EAAAC,EAAAC,cAAA,UACEsB,UAAU,kBACVJ,MAAO,CAAEK,OAAQ,oBACjBC,QAAShF,KAAKJ,MAAMqF,cAHtB,kBAKCjF,KAAKJ,MAAM4B,OACZ8B,EAAAC,EAAAC,cAAA,SACExB,GAAG,mBACHD,KAAK,OACLmD,OAAO,iBACPC,SAAS,GACTC,SAAUpF,KAAK6D,0BAjCJJ,IAAMC,WAsDdC,cAbS,SAAAnC,GAAK,MAAK,CAChCA,MAAOA,IAGkB,SAAA6D,GAAQ,MAAK,CACtCb,QAAS,SAACT,GACRsB,EAAS,CAAEtD,KAAM,aAAcuD,QAASvB,KAE1CkB,aAAc,WACZI,EAAS,CAAEtD,KAAM,oBAIN4B,CAA6CC,GCP7C2B,8LA/CO,IAAAC,EACgCxF,KAAKJ,MADrC6F,EAAAD,EACVE,OAAUC,EADAF,EACAE,MAAO3D,EADPyD,EACOzD,GAAIG,EADXsD,EACWtD,KAAQyD,EADnBJ,EACmBI,SAErCpF,OAAOqF,WAAWC,MAAM9D,EAAI,CAC1B8D,MAAO,CACLC,oBAAqB,KACrBC,gBAAiB,KACjBC,YAAY,EACZlE,KAAM,OAER4D,MAAO,CACLO,KAAMP,GAERQ,QAAS,CACPC,YAAa,iDAEfC,YAAa,CACXC,IAAK,CACHC,kBAAkB,EAClBC,OAAQ,UACRC,WAAY,CACVC,SAAS,GAEXC,cAAc,EACdC,MAAO,CACLC,OAAQ,CACJC,MAAO,WACLlB,EAAS5F,KAAKgC,SAM1B+E,QAAS,CACPL,SAAS,GAEXM,OAAQ7E,qCAKV,OACEmB,EAAAC,EAAAC,cAAA,OAAKxB,GAAIhC,KAAKJ,MAAM8F,OAAO1D,GAAI0C,MAAO,CAAEuC,MAAO,IAAKC,OAAQ,cA3C3CzD,IAAMC,WCIvByD,mLACM,ICPQC,EA4BCC,EDrBT7B,EACkBxF,KAAKJ,MAAvBuC,EADAqD,EACArD,KAAMqC,EADNgB,EACMhB,QACd,OAAIrC,EAEAmB,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAAEE,QAAS,iBAErBtB,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAACE,QAAS,iBACpBtB,EAAAC,EAAAC,cAAA,MAAIkB,MAAO,CAAE4C,UAAW,WAAxB,oBACAhE,EAAAC,EAAAC,cAAC8C,EAAD,CAAUV,SAAU,SAAC5D,GAAD,OAAQwC,EAAQ,CAAEzC,KAAM,aAAcC,QAAO0D,QCaxD2B,EDb4ElF,EAAKoF,WCsD7F,CACLvF,GAxCS,aAyCTG,KAxCW,CAAC,CACZqF,KAAM,WACNC,cAAc,EACdtF,KAAM,CAAC,CACLqF,KAAM,YACNE,EAAGL,EAAS,GAAKA,EAAS,GAAGM,OAAS,EACtC3F,GAAI,GACH,CACDwF,KAAM,YACNE,EAAGL,EAAS,GAAKA,EAAS,GAAGM,OAAS,EACtC3F,GAAI,GACH,CACDwF,KAAM,YACNE,EAAGL,EAAS,GAAKA,EAAS,GAAGM,OAAS,EACtC3F,GAAI,GACJ,CACAwF,KAAM,YACNE,EAAGL,EAAS,GAAKA,EAAS,GAAGM,OAAS,EACtC3F,GAAI,GACJ,CACAwF,KAAM,YACNE,EAAGL,EAAS,GAAKA,EAAS,GAAGM,OAAS,EACtC3F,GAAI,GACJ,CACAwF,KAAM,YACNE,EAAGL,EAAS,GAAKA,EAAS,GAAGM,OAAS,EACtC3F,GAAI,GACJ,CACAwF,KAAM,YACNE,EAAGL,EAAS,GAAKA,EAAS,GAAGM,OAAS,EACtC3F,GAAI,GACJ,CACAwF,KAAM,SACNE,EAAGL,EAAQ,OAAaA,EAAQ,OAAWM,OAAS,EACpD3F,GAAI,aAON2D,MA3CY,QDZNrC,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAACE,QAAS,iBACpBtB,EAAAC,EAAAC,cAAA,MAAIkB,MAAO,CAAE4C,UAAW,WAAxB,uCACAhE,EAAAC,EAAAC,cAAC8C,EAAD,CAAUV,SAAU,SAAC5D,GAAD,OAAQwC,EAAQ,CAAEzC,KAAM,iBAAkBC,QAAO0D,QCnB7D0B,EDmBgFjF,EAAKyF,eCEhG,CACL5F,GApBS,cAqBTG,KApBW,CAAC,CACZqF,KAAM,SACNC,cAAc,EACdtF,KAAM,CAAC,CACLqF,KAAM,gBACNE,EAAGN,EAAY,GAAGO,OAClB3F,GAAI,GACH,CACDwF,KAAM,iBACNE,EAAGN,EAAY,GAAGO,OAClB3F,GAAI,GACH,CACDwF,KAAM,gBACNE,EAAGN,EAAY,GAAGO,OAClB3F,GAAI,MAON2D,MAvBY,SDuBL,YAlByBlC,IAAMC,WAgC3BC,cAVS,SAAAnC,GAAK,MAAK,CAChCW,KAAMX,EAAQA,EAAMM,SAAW,OAGN,SAAAuD,GAAQ,MAAK,CACtCb,QAAS,SAACc,GACRD,EAAS,CAAEtD,KAAM,eAAgBuD,eAItB3B,CAA6CwD,mBEtCtDU,EAAU,QAYVC,EAAa,SAACC,GAClB,GAAIA,EAAOJ,OAAS,EAClB,IAAK,IAAIK,EAAI,EAAGA,EAAID,EAAOJ,OAAQK,IACjC,GAAID,EAAOC,GACT,OAAO,EAIb,OAAO,GAGHC,EAAmB,SAACC,GACxB,OAAOA,EAAMC,QAAQ,MAAO,KAGxBC,EAAuB,SAACF,GAE5B,OADgBG,MAAMH,GAEXI,OAAOJ,GAEJ,SAAVA,EACK,KAEFK,OAAOL,IAGVM,EAAkB,SAACC,EAASC,GAEhC,IADA,IAAIC,EAAa,GACRC,EAAI,EAAGA,EAAIH,EAAQd,OAAQiB,IAAK,CACvC,IAAIC,EAAeZ,EAAiBQ,EAAQG,IAExCV,EAAQQ,EAAYE,GACxBV,EAAQE,EAAqBM,EAAYE,IACzCD,EAAWE,GAAgBX,EAE7B,OAAOS,GC9BMG,EAdU,CACvB,UACA,aACA,mBACA,iBACA,eACA,aACA,eACA,aACA,iBACA,sBACA,oBCTIC,EAAgB,SAACC,GACrB,IAAMC,EFmFuB,SAACC,EAAWC,GACzC,IAAIC,EAAQF,EAAUG,MAAMxB,GAExBY,EAAUW,EAAM,GAAGC,MA1FP,KA4FZC,EAAa,CACfnH,KAAM,GACNP,OAAQ,GACR+F,OAAQ,GAENgB,EAAa,GACbY,EAAiB,GAErBJ,EAAYK,QAAQ,SAAAC,GAClBF,EAAeE,GAAW,KAG5B,IAAK,IAAIzB,EAAI,EAAGA,EAAIoB,EAAMzB,OAAQK,IAAK,CACrC,IAAIU,EAAcU,EAAMpB,GAAGqB,MAzGb,KA0GVvB,EAAWY,KACbC,EAAaH,EAAgBC,EAASC,GACtCY,EAAWnH,KAAKwG,EAAW3G,IAAM2G,EACjCW,EAAW1H,OAAOW,KAAKoG,EAAW3G,IAClCsH,EAAW3B,QAAU,EACrBwB,EAAYK,QAAQ,SAAAC,GAClB,IAAMC,EAA8B,OAAxBf,EAAWc,GAAoB,SAAWd,EAAWc,GACjEF,EAAeE,GAASC,GAAOH,EAAeE,GAASC,IAAQ,GAC/DH,EAAeE,GAASC,GAAKnH,KAAKoG,EAAU,OAIlD,MAAO,CAAChH,KAAO2H,EAAYxH,SAAWyH,GElHdI,CAAuBX,EAAKF,GAE9Cc,EAA2B,GAMjC,OALA9J,OAAO+J,KAAKZ,EAAgBnH,SAASyF,YAAYxG,IAAI,SAAC2I,GACpD,IAAMI,EAAOb,EAAgBnH,SAASyF,WAAWmC,GACjDE,EAAyBF,GAAOI,EAAKC,OAAO,SAAA7B,GAAK,OAAK,IAAMe,EAAgBnH,SAASkI,iBAAiB,GAAGC,QAAQ/B,OAEnHe,EAAgBnH,SAASkI,iBAAiBJ,yBAA2BA,EAC9DX,GAyBMiB,EAtBA,WAAkC,IAAjC1I,EAAiC2I,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAd5B,KAciBE,EAAWF,UAAAxC,OAAA,EAAAwC,UAAA,QAAAC,EAC/C,OAAQC,EAAOtI,MACb,IAAK,aACH,OAAOgH,EAAcsB,EAAO/E,SAC9B,IAAK,eACH,OAAOxF,OAAAwK,EAAA,EAAAxK,CAAA,GACF0B,EADL,CAEEK,cAAe,CACbE,KAAMsI,EAAO/E,QAAQvD,KACrBC,GAAIqI,EAAO/E,QAAQtD,MAGzB,IAAK,eACH,OAAOlC,OAAAwK,EAAA,EAAAxK,CAAA,GACF0B,EADL,CAEEK,cAAe,OAEnB,QACE,OAAOL,IChCP+I,EAAQC,YAAYC,GCILC,mLAEjB,OACEpH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAUJ,MAAOA,GACfjH,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,OACbxB,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAAEE,QAAS,eAAgBqC,MAAO,SAC5C3D,EAAAC,EAAAC,cAAA,MAAIkB,MAAO,CAAEkG,WAAY,EAAGhG,QAAS,iBAArC,wBACAtB,EAAAC,EAAAC,cAACqH,EAAD,OAEFvH,EAAAC,EAAAC,cAACsH,EAAD,MACAxH,EAAAC,EAAAC,cAACuH,EAAD,eAVuBtH,IAAMC,WCKnBsH,QACW,cAA7BxK,OAAOyK,SAASC,UAEe,UAA7B1K,OAAOyK,SAASC,UAEhB1K,OAAOyK,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/H,EAAAC,EAAAC,cAAC8H,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ed3a560f.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './map.css';\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.progressLoader = this.progressLoader.bind(this);\n  }\n  \n  componentDidMount() {\n    var tiles = window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 18,\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Points &copy 2012 LINZ'\n    }),\n    latlng = window.L.latLng(12.92415,77.67229);\n\t\tthis.map = window.L.map('map', { center: latlng, zoom: 13, layers: [tiles] });\n    this.markers = window.L.markerClusterGroup({ chunkedLoading: true, chunkProgress: this.progressLoader });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if(nextProps.state) {\n      let markerArray = [];\n      let filterArray = nextProps.state.json.allIds;\n      if (nextProps.state.currentFilter) {\n        filterArray = nextProps.state.filtered[nextProps.state.currentFilter.type][nextProps.state.currentFilter.id];\n      }\n      this.markers.clearLayers();\n      filterArray.map((id) => {\n        const { from_lat, from_long } = nextProps.state.json.data[id];\n        if(from_lat && from_long ) {\n          let marker = new window.L.marker([from_lat, from_long]);\n          markerArray.push(marker);\n        }\n      });\n      // Add info to tip\n      this.markers.addLayers(markerArray);\n      this.map.addLayer(this.markers);\n      var group = new window.L.featureGroup(markerArray);\n      this.map.fitBounds(group.getBounds());\n    }\n    return false;\n  }\n\n  progressLoader(processed, total, elapsed, layersArray) {\n    if (elapsed > 1000) {\n      console.log(' ==================== loading : ', Math.round(processed/total*100) + '%');\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"map\" />\n    );\n  }\n};\n\nconst mapStateToProps = state => ({\n  state: state,\n});\n\nexport default connect(mapStateToProps)(Map);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass Uploader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n  }\n  \n  onChangeHandler(event) {\n    const file = event.target.files[0];\n    // This can be added in middleware\n    var reader = new FileReader();\n    const self = this;\n    reader.onload = function(event) {\n      const fileData = event.target.result;\n      self.props.getData(fileData);\n    };\n    reader.readAsText(file);\n  }\n  \n  render () {\n    return (\n      <div style={{float: 'right', display: 'inline-block', paddingTop: '30px' }}>\n        { this.props.state && this.props.state.currentFilter && (\n          <button\n            className=\"btn btn-default\"\n            style={{ margin: '10px 10px 10px 0' }}\n            onClick={this.props.resetFilters}>Reset Filters</button>\n        )}\n        { !this.props.state && (\n          <input\n            id=\"selectFileButton\"\n            type=\"file\"\n            accept=\".csv, text/csv\"\n            multiple=\"\"\n            onChange={this.onChangeHandler}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state: state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getData: (file) => {\n    dispatch({ type: 'STORE_DATA', payload: file })\n  },\n  resetFilters: () => {\n    dispatch({ type: 'RESET_FILTER' })\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Uploader);","import React from 'react';\n\nclass PieChart extends React.Component {\n  componentDidMount() {\n    const { params: { title, id, data }, callback } = this.props;\n    // Create the chart\n    window.Highcharts.chart(id, {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n      },\n      title: {\n        text: title,\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: false\n          },\n          showInLegend: true,\n          point: {\n            events: {\n                click: function () {\n                  callback(this.id);\n                }\n            }\n          }\n        }\n      },\n      credits: {\n        enabled: false\n      },\n      series: data,\n    });\n  }\n\n  render() {\n    return (\n      <div id={this.props.params.id} style={{ width: 500, height: 200 }}></div>\n    );\n  }\n}\n\nexport default PieChart;","import React from 'react';\nimport { connect } from 'react-redux';\n// import BarChart from './bar';\nimport PieChart from './pie';\nimport { travelType, packageType, packagePieType } from '../../scripts/chartData';\n\nclass NumberOfBookingsChart extends React.Component {\n  render () {\n    const { data, getData } = this.props;\n    if (data) {\n      return (\n        <div style={{ display: 'inline-block' }} >\n          {/* <BarChart params={packageType(data.package_id, data.Car_Cancellation.cancelledPackageBookings)} /> */}\n          <div style={{display: 'inline-block'}}>\n            <h3 style={{ textAlign: 'center' }}>Package bookings</h3>\n            <PieChart callback={(id) => getData({ type: 'package_id', id}) } params={packageType(data.package_id)} />\n          </div>\n          <div style={{display: 'inline-block'}}>\n            <h3 style={{ textAlign: 'center' }}>Bookings for different travel types</h3>\n            <PieChart callback={(id) => getData({ type: 'travel_type_id', id}) } params={travelType(data.travel_type_id)} />\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state ? state.filtered : null,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getData: (payload) => {\n    dispatch({ type: 'FILTER_POINT', payload })\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NumberOfBookingsChart);","const travelType = (travelTypes) => {\n  const title = '';\n  const id = 'travelChart';\n  const data = [{\n    name: 'Travel',\n    colorByPoint: true,\n    data: [{\n      name: 'Long distance',\n      y: travelTypes[1].length,\n      id: 1,\n    }, {\n      name: 'Point to Point',\n      y: travelTypes[2].length,\n      id: 2,\n    }, {\n      name: 'Hourly rental',\n      y: travelTypes[3].length,\n      id: 3,\n    }]\n  }];\n  \n  return {\n    id,\n    data,\n    title,\n  }\n};\n\nconst packageType = (packages) => {\n  const title = '';\n  const id = 'packagePie';\n  const data = [{\n    name: 'Packages',\n    colorByPoint: true,\n    data: [{\n      name: 'Package 1',\n      y: packages[1] ? packages[1].length : 0,\n      id: 1,\n    }, {\n      name: 'Package 2',\n      y: packages[2] ? packages[2].length : 0,\n      id: 2,\n    }, {\n      name: 'Package 3',\n      y: packages[3] ? packages[3].length : 0,\n      id: 3,\n    },{\n      name: 'Package 4',\n      y: packages[4] ? packages[4].length : 0,\n      id: 4,\n    },{\n      name: 'Package 5',\n      y: packages[5] ? packages[5].length : 0,\n      id: 5,\n    },{\n      name: 'Package 6',\n      y: packages[6] ? packages[6].length : 0,\n      id: 6,\n    },{\n      name: 'Package 7',\n      y: packages[7] ? packages[7].length : 0,\n      id: 7,\n    },{\n      name: 'Others',\n      y: packages['others'] ? packages['others'].length : 0,\n      id: 'others',\n    }]\n  }];\n  \n  return {\n    id,\n    data,\n    title,\n  }\n}\n\n// const packageType = (packages, cancelledPackage) => {\n//   // If a package is not used in any booking, it will not be shown in graph\n//   const bookings = Object.keys(packages).map((key) => {\n//     return packages[key].length - cancelledPackage[key].length;\n//   });\n//   const cancelledBooking = Object.keys(cancelledPackage).map((key) => {\n//     return cancelledPackage[key].length;\n//   })\n//   const title = 'Packages';\n//   const categories = ['Package 1', 'Package 2', 'Package 3', 'Package 4', 'Package 5', 'Package 6', 'Package 7', 'Others'];\n//   const id = 'Packages';\n//   const data = [{\n//     name: 'Successfull Booking',\n//     data: bookings,\n//     index:1,\n//   }, {\n//     name: 'Cancelled',\n//     data: cancelledBooking,\n//     color: 'red',\n//     index: 0,\n//   }];\n//   return {\n//     id,\n//     data,\n//     title,\n//     categories,\n//   }\n// }\n\nexport {\n  travelType,\n  packageType,\n}","const newLine = /\\r?\\n/;\nconst defaultFieldDelimiter = ';';\nconst delimiter = ',';\n\nconst validateJson = (json) => {\n  try {\n    JSON.parse(json);\n  } catch (err) {\n    throw Error('Parsed csv has generated an invalid json!!!\\n' + err);\n  }\n}\n\nconst hasContent = (values) => {\n  if (values.length > 0) {\n    for (let i = 0; i < values.length; i++) {\n      if (values[i]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nconst trimPropertyName = (value) => {\n  return value.replace(/\\s/g, '');\n}\n\nconst getValueFormatByType = (value) => {\n  let isNumber = !isNaN(value);\n  if (isNumber) {\n      return Number(value);\n  }\n  if (value === \"NULL\") {\n    return null;\n  }\n  return String(value);\n}\n\nconst buildJsonResult = (headers, currentLine) => {\n  let jsonObject = {};\n  for (let j = 0; j < headers.length; j++) {\n    let propertyName = trimPropertyName(headers[j]);\n\n    let value = currentLine[j];\n    value = getValueFormatByType(currentLine[j]);\n    jsonObject[propertyName] = value;\n  }\n  return jsonObject;\n}\n\nconst getFieldDelimiter = () => {\n  if (delimiter) {\n    return delimiter;\n  }\n  return defaultFieldDelimiter;\n}\n\n\nconst csvToJson = (parsedCsv, filterables) => {\n  let lines = parsedCsv.split(newLine);\n  let fieldDelimiter = getFieldDelimiter();\n  let headers = lines[0].split(fieldDelimiter);\n\n  let jsonResult = [];\n  let jsonData = {};\n  let filteredResult = {};\n\n  filterables.forEach(element => {\n    filteredResult[element] = {};\n  });\n\n  for (let i = 1; i < lines.length; i++) {\n    let currentLine = lines[i].split(fieldDelimiter);\n    if (hasContent(currentLine)) {\n      jsonData = buildJsonResult(headers, currentLine); \n      jsonResult.push(jsonData);\n\n    }\n  }\n  return jsonResult;\n}\n\nconst getJsonFromCsvStringified = (parsedCsv) => {\n  let json = csvToJson(parsedCsv)\n  let jsonStringified = JSON.stringify(json, undefined, 1);\n  validateJson(jsonStringified);\n  return jsonStringified;\n}\n\nconst getJsonWithFilterables = (parsedCsv, filterables) => {\n  let lines = parsedCsv.split(newLine);\n  let fieldDelimiter = getFieldDelimiter();\n  let headers = lines[0].split(fieldDelimiter);\n\n  let jsonResult = {\n    data: {},\n    allIds: [],\n    length: 0,\n  };\n  let jsonObject = {};\n  let filteredResult = {};\n\n  filterables.forEach(element => {\n    filteredResult[element] = {};\n  });\n\n  for (let i = 1; i < lines.length; i++) {\n    let currentLine = lines[i].split(fieldDelimiter);\n    if (hasContent(currentLine)) {\n      jsonObject = buildJsonResult(headers, currentLine); \n      jsonResult.data[jsonObject.id] = jsonObject;\n      jsonResult.allIds.push(jsonObject.id);\n      jsonResult.length += 1;\n      filterables.forEach(element => {\n        const key = jsonObject[element] === null ? 'others' : jsonObject[element];\n        filteredResult[element][key] = filteredResult[element][key] || [];\n        filteredResult[element][key].push(jsonObject['id']);\n      });\n    }\n  }\n  return {'json':jsonResult, 'filtered':filteredResult};\n}\n\nexport {getJsonFromCsvStringified, getJsonWithFilterables};","// Tell what are filterable data\n// On what basis it has to be filetered in diff categories\n\nconst XRideFilterables = [\n  'user_id',\n  'package_id',\n  'vehicle_model_id',\n  'travel_type_id',\n  'from_area_id',\n  'to_area_id',\n  'from_city_id',\n  'to_city_id',\n  'online_booking',\n  'mobile_site_booking',\n  'Car_Cancellation'\n];\n\nexport default XRideFilterables;","import { getJsonWithFilterables } from '../scripts/csvTojson';\nimport XRideFilterables from '../scripts/filterables';\n\nconst defaultState = null;\n\nconst constructData = (csv) => {\n  const generalisedData = getJsonWithFilterables(csv, XRideFilterables);\n  // Add additional filters\n  const cancelledPackageBookings = {};\n  Object.keys(generalisedData.filtered.package_id).map((key) => {\n    const pack = generalisedData.filtered.package_id[key];\n    cancelledPackageBookings[key] = pack.filter(value => -1 !== generalisedData.filtered.Car_Cancellation[1].indexOf(value));\n  });\n  generalisedData.filtered.Car_Cancellation.cancelledPackageBookings = cancelledPackageBookings;\n  return generalisedData;\n}\n\nconst xRider = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'STORE_DATA':\n      return constructData(action.payload);\n    case 'FILTER_POINT':\n      return {\n        ...state,\n        currentFilter: {\n          type: action.payload.type,\n          id: action.payload.id,\n        }\n      };\n    case 'RESET_FILTER':\n      return {\n        ...state,\n        currentFilter: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default xRider;\n","import { createStore } from 'redux';\nimport reducers from './reducers';\n\nconst store = createStore(reducers);\n\nexport { store };\n","import React from 'react';\nimport Map from './components/map';\nimport { Provider } from 'react-redux';\nimport Uploader from './components/csvUploader';\nimport NumberOfBookingsChart from './components/charts';\nimport { store } from './store';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <div style={{ display: 'inline-block', width: '100%' }}>\n            <h1 style={{ marginLeft: 5, display: 'inline-block' }}>Interactive Map demo</h1>\n            <Uploader />\n          </div>\n          <Map />\n          <NumberOfBookingsChart />\n        </div>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}